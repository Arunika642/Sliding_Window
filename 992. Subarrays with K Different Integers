class Solution {
    public int countSubarrays(int[] nums, int k)
    {
        int l=0, count = 0;
        Map<Integer, Integer> mpp = new HashMap<>();
        for(int r=0; r<nums.length;r++)
        {
            mpp.put(nums[r], mpp.getOrDefault(nums[r],0)+1);
            while(mpp.size()>k)
            {
                mpp.put(nums[l],mpp.getOrDefault(nums[l],0)-1);
                if(mpp.get(nums[l])==0)
                {
                    mpp.remove(nums[l]);
                }
                l++;
            }
            count = count + (r-l+1);
        }
        return count;
    }
    public int subarraysWithKDistinct(int[] nums, int k) {
        return countSubarrays(nums,k) - countSubarrays(nums,k-1);
    }
}
